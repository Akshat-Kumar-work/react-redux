{"ast":null,"code":"const {\n  createSlice\n} = require(\"@reduxjs/toolkit\");\nconst initialState = {\n  value: 0\n};\n\n//slice create kari hai createslice method se , aur slice ko export krdia hai\n//CounterSlice ek variable hai jo store krta hai object jo return hoty hai createslice function se\nexport const CounterSlice = createSlice({\n  //slice name\n  // In Redux, a prefix is a string that is added to the beginning of an action type to \n  //  create a unique identifier for the action. The prefix helps to prevent naming collisions between actions defined in different parts of your application.\n  //action type k agy use hota hai as a prefix jo differentiate krega actions m \n  name: \"counter\",\n  //an object containing initial state value\n  initialState,\n  //The reducers field in a slice is essentially a collection of these reducer functions that are combined together to create a larger reducer for the slice.\n  reducers: {\n    // reducer function\n    increment: state => {\n      state.value += 1;\n    },\n    // reducer function\n    decrement: state => {\n      state.value -= 1;\n    }\n  }\n});\n\n//createSlice method 2 chize deta hai action creator aur reducer\n//reducers k andar sare functions hoty hai \n//action creator k andar reducer function ki implimentation hoti hai \n//agar sare reducers function ki implementation ko slice m se bhar nikalana hai toh actions se niklengy\n\n//2 chize hamesha export krni hai\n//CounterSlice.actions is an object that contains the action creators for the slice, including increment and decrement.\n//reducer function ki implementation ko export kar rhe hai , yaha hum function ko export kar rhe hai\nexport const {\n  increment,\n  decrement\n} = CounterSlice.actions;\n\n//CounterSlice.reducer is the actual reducer function that updates the state, \nexport default CounterSlice.reducer;","map":{"version":3,"names":["createSlice","require","initialState","value","CounterSlice","name","reducers","increment","state","decrement","actions","reducer"],"sources":["E:/react redux/src/redux/slices/CounterSlice.jsx"],"sourcesContent":["const { createSlice } = require(\"@reduxjs/toolkit\");\r\n\r\nconst initialState = {\r\n    value:0\r\n}\r\n\r\n//slice create kari hai createslice method se , aur slice ko export krdia hai\r\n//CounterSlice ek variable hai jo store krta hai object jo return hoty hai createslice function se\r\nexport const CounterSlice = createSlice({\r\n    //slice name\r\n   // In Redux, a prefix is a string that is added to the beginning of an action type to \r\n  //  create a unique identifier for the action. The prefix helps to prevent naming collisions between actions defined in different parts of your application.\r\n  //action type k agy use hota hai as a prefix jo differentiate krega actions m \r\n    name:\"counter\",\r\n    \r\n    //an object containing initial state value\r\n    initialState, \r\n\r\n    //The reducers field in a slice is essentially a collection of these reducer functions that are combined together to create a larger reducer for the slice.\r\n    reducers:{\r\n        // reducer function\r\n        increment:(state)=>{\r\n            state.value+=1;\r\n        },\r\n        // reducer function\r\n        decrement:(state)=>{\r\n            state.value-=1;\r\n        }\r\n    }\r\n})\r\n\r\n//createSlice method 2 chize deta hai action creator aur reducer\r\n//reducers k andar sare functions hoty hai \r\n//action creator k andar reducer function ki implimentation hoti hai \r\n//agar sare reducers function ki implementation ko slice m se bhar nikalana hai toh actions se niklengy\r\n\r\n//2 chize hamesha export krni hai\r\n//CounterSlice.actions is an object that contains the action creators for the slice, including increment and decrement.\r\n//reducer function ki implementation ko export kar rhe hai , yaha hum function ko export kar rhe hai\r\nexport const {increment, decrement} = CounterSlice.actions;\r\n\r\n\r\n//CounterSlice.reducer is the actual reducer function that updates the state, \r\nexport default CounterSlice.reducer;"],"mappings":"AAAA,MAAM;EAAEA;AAAY,CAAC,GAAGC,OAAO,CAAC,kBAAkB,CAAC;AAEnD,MAAMC,YAAY,GAAG;EACjBC,KAAK,EAAC;AACV,CAAC;;AAED;AACA;AACA,OAAO,MAAMC,YAAY,GAAGJ,WAAW,CAAC;EACpC;EACD;EACD;EACA;EACEK,IAAI,EAAC,SAAS;EAEd;EACAH,YAAY;EAEZ;EACAI,QAAQ,EAAC;IACL;IACAC,SAAS,EAAEC,KAAK,IAAG;MACfA,KAAK,CAACL,KAAK,IAAE,CAAC;IAClB,CAAC;IACD;IACAM,SAAS,EAAED,KAAK,IAAG;MACfA,KAAK,CAACL,KAAK,IAAE,CAAC;IAClB;EACJ;AACJ,CAAC,CAAC;;AAEF;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO,MAAM;EAACI,SAAS;EAAEE;AAAS,CAAC,GAAGL,YAAY,CAACM,OAAO;;AAG1D;AACA,eAAeN,YAAY,CAACO,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}